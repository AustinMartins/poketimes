{"ast":null,"code":"import _classCallCheck from \"/root/WebstormProjects/poketimes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/WebstormProjects/poketimes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/WebstormProjects/poketimes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/WebstormProjects/poketimes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/WebstormProjects/poketimes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/WebstormProjects/poketimes/src/components/Post.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Post)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClick = function () {};\n\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var post = this.props.post ? React.createElement(\"div\", {\n        className: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, this.props.post.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, this.props.post.body), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn grey\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Delete Post\"))) : React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Loading ...\");\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, post);\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var id = ownProps.match.params.post_id;\n  return {\n    post: state.posts.find(function (post) {\n      return post.id == id;\n    })\n  };\n};\n\nvar mapDispachToProps = function mapDispachToProps(dispatch) {\n  return {\n    deletePost: function deletePost(id) {\n      dispatch({\n        type: \"DELETE_POST\",\n        id: id\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(Post);","map":{"version":3,"sources":["/root/WebstormProjects/poketimes/src/components/Post.js"],"names":["React","Component","connect","Post","handleClick","console","log","props","post","title","body","mapStateToProps","state","ownProps","id","match","params","post_id","posts","find","mapDispachToProps","dispatch","deletePost","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,I;;;;;;;;;;;;;;;;;;UAEFC,W,GAAc,YAAK,CAElB,C;;;;;;;6BAEO;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,UAAMC,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,GACT;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,KAAxC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,IAApB,CAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAE,KAAKN,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAHJ,CADS,GAST;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATJ;AAYA,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKI,IADL,CADJ;AAKH;;;;EAzBcP,S;;AA4BnB,IAAMU,eAAe,GAAE,SAAjBA,eAAiB,CAACC,KAAD,EAAQC,QAAR,EAAoB;AACvC,MAAIC,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,OAA/B;AACA,SAAO;AACHT,IAAAA,IAAI,EAAEI,KAAK,CAACM,KAAN,CAAYC,IAAZ,CAAiB,UAAAX,IAAI;AAAA,aAAIA,IAAI,CAACM,EAAL,IAAWA,EAAf;AAAA,KAArB;AADH,GAAP;AAGH,CALD;;AAOA,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAa;AACnC,SAAM;AACFC,IAAAA,UAAU,EAAE,oBAACR,EAAD,EAAO;AAACO,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAC,aAAN;AAAqBT,QAAAA,EAAE,EAACA;AAAxB,OAAD,CAAR;AAAsC;AADxD,GAAN;AAGH,CAJD;;AAMA,eAAeZ,OAAO,CAACS,eAAD,EAAiBS,iBAAjB,CAAP,CAA2CjB,IAA3C,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport {connect} from 'react-redux';\n\nclass Post extends Component{\n\n    handleClick = () =>{\n\n    }\n    \n    render(){\n        console.log(this.props)\n        const post = this.props.post ? (\n            <div className=\"post\">\n                <h4 className=\"center\">{this.props.post.title}</h4>\n                <p>{this.props.post.body}</p>\n                <div className=\"center\">\n                    <button className=\"btn grey\" onClick={this.handleClick}>Delete Post</button>\n                </div>\n            </div>\n            ) : (\n            <div className=\"center\">Loading ...</div>\n        )\n\n        return(\n            <div className=\"container\">\n                {post}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps =(state, ownProps) =>{\n    let id = ownProps.match.params.post_id;\n    return {\n        post: state.posts.find(post => post.id == id)\n    }\n}\n\nconst mapDispachToProps = (dispatch) =>{\n    return{\n        deletePost: (id) =>{dispatch({type:\"DELETE_POST\", id:id})}\n    }\n}\n\nexport default connect(mapStateToProps,mapDispachToProps)(Post);"]},"metadata":{},"sourceType":"module"}